/*L
  Copyright Washington University at St. Louis

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/geneconnect/LICENSE.txt for details.
L*/

DROP TABLE CONSENSUS_DATA CASCADE CONSTRAINTS
;
DROP TABLE ROLE_LOOKUP CASCADE CONSTRAINTS
;
DROP TABLE DATASOURCE CASCADE CONSTRAINTS
;
DROP TABLE DATASOURCE_LINKS CASCADE CONSTRAINTS
;
DROP TABLE PATH CASCADE CONSTRAINTS
;
DROP TABLE SUBPATH CASCADE CONSTRAINTS
;
DROP TABLE BASETABLE_METADATA CASCADE CONSTRAINTS
;
DROP TABLE COLUMN_METADATA CASCADE CONSTRAINTS
;
DROP TABLE TABLEJOIN_METADATA CASCADE CONSTRAINTS
;
DROP TABLE GENE CASCADE CONSTRAINTS
;
DROP TABLE GENE_MRNA CASCADE CONSTRAINTS
;
DROP TABLE GENOMIC_IDENTIFIER CASCADE CONSTRAINTS
;
DROP TABLE GENOMIC_IDENTIFIER_SET CASCADE CONSTRAINTS
;
DROP TABLE LINKTYPE CASCADE CONSTRAINTS
;
DROP TABLE MRNA CASCADE CONSTRAINTS
;
DROP TABLE MRNA_PROTEIN CASCADE CONSTRAINTS
;
DROP TABLE ONT CASCADE CONSTRAINTS
;
DROP TABLE PATH_ONT CASCADE CONSTRAINTS
;
DROP TABLE PROTEIN CASCADE CONSTRAINTS
;
DROP TABLE PROTEIN_GENE CASCADE CONSTRAINTS
;
DROP TABLE SET_ONT CASCADE CONSTRAINTS
;
DROP TABLE SOLUTION CASCADE CONSTRAINTS
;

CREATE TABLE CONSENSUS_DATA ( 
	CONSENSUS_ID NUMBER(8) NOT NULL,
	FREQUENCY NUMBER(8,2),
	GENOMIC_ID NUMBER(8),
	SET_ID NUMBER(8),
	ID NUMBER(2),
	SOLUTION_ID NUMBER(8)
);

CREATE TABLE ROLE_LOOKUP (
	ID NUMBER (2),
	SOURCE_CLASS VARCHAR2 (50),
	TARGET_CLASS VARCHAR2 (50),
	ROLE_NAME VARCHAR2 (50)
);

CREATE TABLE DATASOURCE ( 
	DATASOURCE_ID	NUMBER(4) NOT NULL,
	DATASOURCE_NAME VARCHAR2(50) NOT NULL,
	GENOMIC_IDENTIFIER_CLASS VARCHAR2(50) NOT NULL,
	CLASS		VARCHAR2(20),
	ATTRIBUTE	VARCHAR2(30),
	ATTRIBUTE_TYPE  VARCHAR2(40),
	OUTPUT_ATTRIBUTE VARCHAR2(30),
	TABLE_NAME	VARCHAR2(30),
	COLUMN_NAME	VARCHAR2(30),
	ROW_FOR_GRAPH NUMBER(4),
	COL_FOR_GRAPH NUMBER(4)
);

CREATE INDEX DATASOURCE_INDEX ON DATASOURCE(DATASOURCE_ID);

ALTER TABLE DATASOURCE  ADD CONSTRAINT PK_DATASOURCE_ID
	PRIMARY KEY (DATASOURCE_ID);



CREATE TABLE LINKTYPE ( 
	LINK_TYPE_ID	NUMBER(4) NOT NULL,
	LINK_TYPE_NAME  VARCHAR2(50) NOT NULL
);

CREATE INDEX LINKTYPE_INDEX ON LINKTYPE(LINK_TYPE_ID);

ALTER TABLE LINKTYPE  ADD CONSTRAINT PK_LINK_TYPE
	PRIMARY KEY (LINK_TYPE_ID);




CREATE TABLE DATASOURCE_LINKS
(
  SOURCE_DATASOURCE_ID	NUMBER(4) NOT NULL,
  TARGET_DATASOURCE_ID	NUMBER(4) NOT NULL,
  LINK_TYPE_ID		NUMBER(4),
  FOREIGN KEY (SOURCE_DATASOURCE_ID) REFERENCES DATASOURCE(DATASOURCE_ID),
  FOREIGN KEY (TARGET_DATASOURCE_ID) REFERENCES DATASOURCE(DATASOURCE_ID),
  FOREIGN KEY (LINK_TYPE_ID) REFERENCES LINKTYPE(LINK_TYPE_ID)
);

CREATE INDEX DATASOURCE_LINKS_INDEX ON DATASOURCE_LINKS(SOURCE_DATASOURCE_ID,TARGET_DATASOURCE_ID);

ALTER TABLE DATASOURCE_LINKS  ADD CONSTRAINT PK_DATASOURCE_LINKS
 PRIMARY KEY (SOURCE_DATASOURCE_ID,TARGET_DATASOURCE_ID,LINK_TYPE_ID);




CREATE TABLE PATH
(
  PATH_ID		NUMBER(8) NOT NULL,
  SOURCE_DATASOURCE_ID	NUMBER(4) NOT NULL,
  TARGET_DATASOURCE_ID	NUMBER(4) NOT NULL,
  PATH			VARCHAR2(50),
  FOREIGN KEY (SOURCE_DATASOURCE_ID) REFERENCES DATASOURCE(DATASOURCE_ID),
  FOREIGN KEY (TARGET_DATASOURCE_ID) REFERENCES DATASOURCE(DATASOURCE_ID)
);

CREATE INDEX PATH_INDEX_ID ON PATH(PATH_ID);

ALTER TABLE PATH  ADD CONSTRAINT PK_PATH
 PRIMARY KEY (PATH_ID);



CREATE TABLE SUBPATH
(
  PATH_ID		NUMBER(8) NOT NULL,
  SUBPATH_ID		NUMBER(8) NOT NULL,
  FOREIGN KEY (PATH_ID) REFERENCES PATH(PATH_ID),
  FOREIGN KEY (SUBPATH_ID) REFERENCES PATH(PATH_ID)
);

CREATE INDEX SUBPATH_INDEX_PATHIDS ON SUBPATH(PATH_ID,SUBPATH_ID);

ALTER TABLE SUBPATH  ADD CONSTRAINT PK_SUBPATH
  PRIMARY KEY (PATH_ID,SUBPATH_ID);


CREATE TABLE BASETABLE_METADATA ( 
  TABLE_ID               NUMBER(4)    NOT NULL , 
  TABLE_NAME             VARCHAR2(50) NOT NULL , 
  SOURCE_DATASOURCE_ID  NUMBER(4)     NOT NULL , 
  TARGET_DATASOURCE_ID  NUMBER(4)     NOT NULL ,
  FOREIGN KEY (SOURCE_DATASOURCE_ID) REFERENCES DATASOURCE (DATASOURCE_ID),
  FOREIGN KEY (TARGET_DATASOURCE_ID) REFERENCES DATASOURCE (DATASOURCE_ID)
);

CREATE INDEX BASETABLE_INDEX_ID ON  BASETABLE_METADATA(TABLE_ID);

ALTER TABLE BASETABLE_METADATA  ADD CONSTRAINT PK_BASETABLE_METADATA
  PRIMARY KEY (TABLE_ID);



CREATE TABLE COLUMN_METADATA ( 
  COLUMN_ID    NUMBER (4)     NOT NULL, 
  COLUMN_NAME  VARCHAR2 (50)  NOT NULL, 
  TABLE_ID     NUMBER (4)     NOT NULL,
  DATASOURCE_ID  NUMBER(4),
  FOREIGN KEY (TABLE_ID) REFERENCES BASETABLE_METADATA (TABLE_ID),
  FOREIGN KEY (DATASOURCE_ID) REFERENCES DATASOURCE (DATASOURCE_ID)
 );

CREATE INDEX COLUMN_METADATA_INDEX ON COLUMN_METADATA(COLUMN_ID);

ALTER TABLE COLUMN_METADATA  ADD CONSTRAINT PK_COLUMN_METADATA
   PRIMARY KEY (COLUMN_ID);


CREATE TABLE TABLEJOIN_METADATA ( 
  SOURCE_TABLE_ID   NUMBER(4)     NOT NULL , 
  TARGET_TABLE_ID   NUMBER(4)     NOT NULL ,
  SOURCE_COLUMN_ID  NUMBER(4)     NOT NULL , 
  TARGET_COLUMN_ID  NUMBER(4)     NOT NULL ,
  FOREIGN KEY (SOURCE_TABLE_ID) REFERENCES BASETABLE_METADATA (TABLE_ID),
  FOREIGN KEY (TARGET_TABLE_ID) REFERENCES BASETABLE_METADATA (TABLE_ID),
  FOREIGN KEY (SOURCE_COLUMN_ID) REFERENCES COLUMN_METADATA (COLUMN_ID),
  FOREIGN KEY (TARGET_COLUMN_ID) REFERENCES COLUMN_METADATA (COLUMN_ID)
 );

CREATE INDEX TABLEJOIN_METADATA_INDEX ON TABLEJOIN_METADATA(SOURCE_TABLE_ID , TARGET_TABLE_ID);

ALTER TABLE TABLEJOIN_METADATA  ADD CONSTRAINT PK_TABLEJOIN_METADATA
  PRIMARY KEY (SOURCE_TABLE_ID,TARGET_TABLE_ID);



CREATE TABLE GENE ( 
	GENE_ID NUMBER(20) NOT NULL,
	ENSEMBL_GENE_ID VARCHAR2(50),
	ENTREZ_GENE_ID NUMBER(8),
	UNIGENE_CLUSTER_ID VARCHAR2(50)
)
;

CREATE TABLE GENE_MRNA ( 
	GENE_ID NUMBER(20) NOT NULL,
	MRNA_ID NUMBER(20) NOT NULL
)
;

CREATE TABLE GENOMIC_IDENTIFIER ( 
	GENOMIC_ID NUMBER(8) NOT NULL,
	DATASOURCE VARCHAR2(50),
	GENOMIC_IDENTIFIER VARCHAR2(50),
	ENTZ_GENOMIC_IDENTIFIER NUMBER(8)
)
;

CREATE TABLE GENOMIC_IDENTIFIER_SET ( 
	SET_ID NUMBER(20) NOT NULL,
	GENE_ID NUMBER(20),
	MRNA_ID NUMBER(20),
	PROTEIN_ID NUMBER(20),
	SOLUTION_ID NUMBER(8)
)
;

CREATE TABLE MRNA ( 
	MRNA_ID NUMBER(20) NOT NULL,
	ENSEMBL_TRANSCRIPT_ID VARCHAR2(50),
	GENBANK_MRNA_ACCESSION VARCHAR2(50),
	REFSEQ_MRNA_ID VARCHAR2(50)
)
;

CREATE TABLE MRNA_PROTEIN ( 
	MRNA_ID NUMBER(20) NOT NULL,
	PROTEIN_ID NUMBER(20) NOT NULL
)
;

CREATE TABLE ONT ( 
	PATH_ID NUMBER(8) NOT NULL,
	SOURCE_DS_ID NUMBER(4) NOT NULL,
	LINKTYPE_ID NUMBER(4),
	NEXT_PATH_ID NUMBER(8),
	PREV_PATH_ID NUMBER(8),
	FOREIGN KEY (SOURCE_DS_ID) REFERENCES DATASOURCE (DATASOURCE_ID),
	FOREIGN KEY (LINKTYPE_ID) REFERENCES LINKTYPE (LINK_TYPE_ID)
);

CREATE INDEX ONT_INDEX ON ONT(PATH_ID);

ALTER TABLE ONT ADD CONSTRAINT PK_ONT
 PRIMARY KEY (PATH_ID);



CREATE TABLE PATH_ONT ( 
	PATH_ID NUMBER(8),
	ONT_ID NUMBER(8),
	PRIMARY KEY (PATH_ID,ONT_ID),
	FOREIGN KEY (PATH_ID) REFERENCES PATH (PATH_ID),
	FOREIGN KEY (ONT_ID) REFERENCES ONT (PATH_ID)
)
;

CREATE TABLE PROTEIN ( 
	PROTEIN_ID NUMBER(20) NOT NULL,
	ENSEMBL_PEPTIDE_ID VARCHAR2(50),
	REFSEQ_PROTEIN_ID VARCHAR2(50),
	UNIPROTKB_ACCESSION VARCHAR2(50),
	GENEBANK_PROTEIN_ACCESSION VARCHAR2(50)
)
;

CREATE TABLE PROTEIN_GENE ( 
	PROTEIN_ID NUMBER(20) NOT NULL,
	GENE_ID NUMBER(20) NOT NULL
)
;

CREATE TABLE SET_ONT ( 
	SET_ID NUMBER(20) NOT NULL,
	PATH_ID NUMBER(8)
)
;

CREATE TABLE SOLUTION ( 
	SOLUTION_ID NUMBER(8) NOT NULL
)
;


CREATE INDEX PATH_INDEX_DATASOURCE_IDS ON PATH(SOURCE_DATASOURCE_ID,TARGET_DATASOURCE_ID);

CREATE INDEX SUBPATH_INDEX_ID ON SUBPATH(PATH_ID);

CREATE INDEX BASETABLE_INDEX_DATASOURCE_IDS ON  BASETABLE_METADATA(SOURCE_DATASOURCE_ID,TARGET_DATASOURCE_ID);

CREATE INDEX PATH_ONT_INDEX_PATHID ON PATH_ONT(PATH_ID);

CREATE INDEX PATH_ONT_INDEX_ONTID ON PATH_ONT(ONT_ID);

CREATE INDEX GENOMIC_IDENTIFIER_INDEX ON GENOMIC_IDENTIFIER(GENOMIC_ID)
;


ALTER TABLE CONSENSUS_DATA ADD CONSTRAINT PK_CONSENSUS_DATA 
	PRIMARY KEY (CONSENSUS_ID)
;

ALTER TABLE GENE ADD CONSTRAINT PK_GENE 
	PRIMARY KEY (GENE_ID)
;

ALTER TABLE GENOMIC_IDENTIFIER ADD CONSTRAINT PK_GENOMIC_IDENTIFIER 
	PRIMARY KEY (GENOMIC_ID)
;

ALTER TABLE GENOMIC_IDENTIFIER_SET ADD CONSTRAINT PK_GENOMIC_IDENTIFIER_SET 
	PRIMARY KEY (SET_ID)
;

ALTER TABLE MRNA ADD CONSTRAINT PK_MRNA 
	PRIMARY KEY (MRNA_ID)
;

ALTER TABLE PROTEIN ADD CONSTRAINT PK_PROTEIN 
	PRIMARY KEY (PROTEIN_ID)
;

ALTER TABLE SOLUTION ADD CONSTRAINT PK_SOLUTION 
	PRIMARY KEY (SOLUTION_ID)
;

ALTER TABLE CONSENSUS_DATA ADD CONSTRAINT FK_CONSENSUS_DAT_GENOMIC_IDENT 
	FOREIGN KEY (GENOMIC_ID) REFERENCES GENOMIC_IDENTIFIER (GENOMIC_ID)
;

ALTER TABLE CONSENSUS_DATA ADD CONSTRAINT FK_CONSENSUS_DATA_SOLUTION 
	FOREIGN KEY (SOLUTION_ID) REFERENCES SOLUTION (SOLUTION_ID)
;

ALTER TABLE GENE_MRNA ADD CONSTRAINT FK_GENE_MRNA_GENE 
	FOREIGN KEY (GENE_ID) REFERENCES GENE (GENE_ID)
;

ALTER TABLE GENE_MRNA ADD CONSTRAINT FK_GENE_MRNA_MRNA 
	FOREIGN KEY (MRNA_ID) REFERENCES MRNA (MRNA_ID)
;

ALTER TABLE GENOMIC_IDENTIFIER_SET ADD CONSTRAINT FK_GENOMIC_IDENTIFIER__PROTEIN 
	FOREIGN KEY (PROTEIN_ID) REFERENCES PROTEIN (PROTEIN_ID)
;

ALTER TABLE GENOMIC_IDENTIFIER_SET ADD CONSTRAINT FK_GENOMIC_IDENTIFIER_SET_GENE 
	FOREIGN KEY (GENE_ID) REFERENCES GENE (GENE_ID)
;

ALTER TABLE GENOMIC_IDENTIFIER_SET ADD CONSTRAINT FK_GENOMIC_IDENTIFIER_SET_MRNA 
	FOREIGN KEY (MRNA_ID) REFERENCES MRNA (MRNA_ID)
;

ALTER TABLE GENOMIC_IDENTIFIER_SET ADD CONSTRAINT FK_GENOMIC_IDENTIFIER_SOLUTION 
	FOREIGN KEY (SOLUTION_ID) REFERENCES SOLUTION (SOLUTION_ID)
;

ALTER TABLE MRNA_PROTEIN ADD CONSTRAINT FK_MRNA_PROTEIN_MRNA 
	FOREIGN KEY (MRNA_ID) REFERENCES MRNA (MRNA_ID)
;

ALTER TABLE MRNA_PROTEIN ADD CONSTRAINT FK_MRNA_PROTEIN_PROTEIN 
	FOREIGN KEY (PROTEIN_ID) REFERENCES PROTEIN (PROTEIN_ID)
;

ALTER TABLE PROTEIN_GENE ADD CONSTRAINT FK_PROTEIN_GENE_GENE 
	FOREIGN KEY (GENE_ID) REFERENCES GENE (GENE_ID)
;

ALTER TABLE PROTEIN_GENE ADD CONSTRAINT FK_PROTEIN_GENE_PROTEIN 
	FOREIGN KEY (PROTEIN_ID) REFERENCES PROTEIN (PROTEIN_ID)
;

ALTER TABLE SET_ONT ADD CONSTRAINT FK_SET_ONT_ONT 
	FOREIGN KEY (PATH_ID) REFERENCES ONT (PATH_ID)
;

ALTER TABLE SET_ONT ADD CONSTRAINT FK_SET_ONT_SET 
	FOREIGN KEY (SET_ID) REFERENCES GENOMIC_IDENTIFIER_SET (SET_ID)
;

ALTER TABLE ONT ADD CONSTRAINT FK_ONT_ONT 
	FOREIGN KEY (NEXT_PATH_ID) REFERENCES ONT (PATH_ID)
;

ALTER TABLE ONT ADD CONSTRAINT FK_ONT_PREV_ONT 
	FOREIGN KEY (PREV_PATH_ID) REFERENCES ONT (PATH_ID)
;

ALTER TABLE SET_ONT ADD CONSTRAINT PK_SET_ONT 
	PRIMARY KEY (PATH_ID, SET_ID) 
;

INSERT INTO LINKTYPE VALUES(1,'DIRECT');
INSERT INTO LINKTYPE VALUES(2,'INFERRED');
INSERT INTO LINKTYPE VALUES(4,'IDENTITY');
INSERT INTO LINKTYPE VALUES(8,'ALIGNMENT');

